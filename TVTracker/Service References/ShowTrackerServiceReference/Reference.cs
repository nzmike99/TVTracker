//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.VisualStudio.ServiceReference.Platforms, version 14.0.23107.0
// 
namespace TVTracker.ShowTrackerServiceReference {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShowData", Namespace="http://schemas.datacontract.org/2004/07/ShowTrackerWCF")]
    public partial class ShowData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool ActiveField;
        
        private System.Collections.ObjectModel.ObservableCollection<TVTracker.ShowTrackerServiceReference.Episode> EpisodesDataField;
        
        private int IDField;
        
        private string IMDBIDField;
        
        private System.DateTime LastUpdatedField;
        
        private System.DateTime LastWatchedDateField;
        
        private int LastWatchedEpisodeField;
        
        private int LastWatchedSeasonField;
        
        private int SeasonsField;
        
        private System.Collections.ObjectModel.ObservableCollection<TVTracker.ShowTrackerServiceReference.Season> SeasonsDataField;
        
        private string StatusField;
        
        private System.Nullable<int> TVDBIDField;
        
        private System.Nullable<int> TVMazeIDField;
        
        private System.Nullable<int> TVRageIDField;
        
        private string TitleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<TVTracker.ShowTrackerServiceReference.Episode> EpisodesData {
            get {
                return this.EpisodesDataField;
            }
            set {
                if ((object.ReferenceEquals(this.EpisodesDataField, value) != true)) {
                    this.EpisodesDataField = value;
                    this.RaisePropertyChanged("EpisodesData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IMDBID {
            get {
                return this.IMDBIDField;
            }
            set {
                if ((object.ReferenceEquals(this.IMDBIDField, value) != true)) {
                    this.IMDBIDField = value;
                    this.RaisePropertyChanged("IMDBID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdated {
            get {
                return this.LastUpdatedField;
            }
            set {
                if ((this.LastUpdatedField.Equals(value) != true)) {
                    this.LastUpdatedField = value;
                    this.RaisePropertyChanged("LastUpdated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastWatchedDate {
            get {
                return this.LastWatchedDateField;
            }
            set {
                if ((this.LastWatchedDateField.Equals(value) != true)) {
                    this.LastWatchedDateField = value;
                    this.RaisePropertyChanged("LastWatchedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LastWatchedEpisode {
            get {
                return this.LastWatchedEpisodeField;
            }
            set {
                if ((this.LastWatchedEpisodeField.Equals(value) != true)) {
                    this.LastWatchedEpisodeField = value;
                    this.RaisePropertyChanged("LastWatchedEpisode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LastWatchedSeason {
            get {
                return this.LastWatchedSeasonField;
            }
            set {
                if ((this.LastWatchedSeasonField.Equals(value) != true)) {
                    this.LastWatchedSeasonField = value;
                    this.RaisePropertyChanged("LastWatchedSeason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Seasons {
            get {
                return this.SeasonsField;
            }
            set {
                if ((this.SeasonsField.Equals(value) != true)) {
                    this.SeasonsField = value;
                    this.RaisePropertyChanged("Seasons");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<TVTracker.ShowTrackerServiceReference.Season> SeasonsData {
            get {
                return this.SeasonsDataField;
            }
            set {
                if ((object.ReferenceEquals(this.SeasonsDataField, value) != true)) {
                    this.SeasonsDataField = value;
                    this.RaisePropertyChanged("SeasonsData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TVDBID {
            get {
                return this.TVDBIDField;
            }
            set {
                if ((this.TVDBIDField.Equals(value) != true)) {
                    this.TVDBIDField = value;
                    this.RaisePropertyChanged("TVDBID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TVMazeID {
            get {
                return this.TVMazeIDField;
            }
            set {
                if ((this.TVMazeIDField.Equals(value) != true)) {
                    this.TVMazeIDField = value;
                    this.RaisePropertyChanged("TVMazeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TVRageID {
            get {
                return this.TVRageIDField;
            }
            set {
                if ((this.TVRageIDField.Equals(value) != true)) {
                    this.TVRageIDField = value;
                    this.RaisePropertyChanged("TVRageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Episode", Namespace="http://schemas.datacontract.org/2004/07/ShowTrackerWCF")]
    public partial class Episode : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<System.DateTime> DateWatchedField;
        
        private int EpisodeNumberField;
        
        private string EpisodeRefField;
        
        private int IDField;
        
        private System.DateTime LastUpdatedField;
        
        private int SeasonIDField;
        
        private int ShowIDField;
        
        private string TitleField;
        
        private bool WatchedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateWatched {
            get {
                return this.DateWatchedField;
            }
            set {
                if ((this.DateWatchedField.Equals(value) != true)) {
                    this.DateWatchedField = value;
                    this.RaisePropertyChanged("DateWatched");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EpisodeNumber {
            get {
                return this.EpisodeNumberField;
            }
            set {
                if ((this.EpisodeNumberField.Equals(value) != true)) {
                    this.EpisodeNumberField = value;
                    this.RaisePropertyChanged("EpisodeNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EpisodeRef {
            get {
                return this.EpisodeRefField;
            }
            set {
                if ((object.ReferenceEquals(this.EpisodeRefField, value) != true)) {
                    this.EpisodeRefField = value;
                    this.RaisePropertyChanged("EpisodeRef");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdated {
            get {
                return this.LastUpdatedField;
            }
            set {
                if ((this.LastUpdatedField.Equals(value) != true)) {
                    this.LastUpdatedField = value;
                    this.RaisePropertyChanged("LastUpdated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SeasonID {
            get {
                return this.SeasonIDField;
            }
            set {
                if ((this.SeasonIDField.Equals(value) != true)) {
                    this.SeasonIDField = value;
                    this.RaisePropertyChanged("SeasonID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShowID {
            get {
                return this.ShowIDField;
            }
            set {
                if ((this.ShowIDField.Equals(value) != true)) {
                    this.ShowIDField = value;
                    this.RaisePropertyChanged("ShowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Watched {
            get {
                return this.WatchedField;
            }
            set {
                if ((this.WatchedField.Equals(value) != true)) {
                    this.WatchedField = value;
                    this.RaisePropertyChanged("Watched");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Season", Namespace="http://schemas.datacontract.org/2004/07/ShowTrackerWCF")]
    public partial class Season : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int EpisodesField;
        
        private int IDField;
        
        private System.DateTime LastUpdatedField;
        
        private int SeasonNumberField;
        
        private int ShowIDField;
        
        private bool WatchedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Episodes {
            get {
                return this.EpisodesField;
            }
            set {
                if ((this.EpisodesField.Equals(value) != true)) {
                    this.EpisodesField = value;
                    this.RaisePropertyChanged("Episodes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdated {
            get {
                return this.LastUpdatedField;
            }
            set {
                if ((this.LastUpdatedField.Equals(value) != true)) {
                    this.LastUpdatedField = value;
                    this.RaisePropertyChanged("LastUpdated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SeasonNumber {
            get {
                return this.SeasonNumberField;
            }
            set {
                if ((this.SeasonNumberField.Equals(value) != true)) {
                    this.SeasonNumberField = value;
                    this.RaisePropertyChanged("SeasonNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShowID {
            get {
                return this.ShowIDField;
            }
            set {
                if ((this.ShowIDField.Equals(value) != true)) {
                    this.ShowIDField = value;
                    this.RaisePropertyChanged("ShowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Watched {
            get {
                return this.WatchedField;
            }
            set {
                if ((this.WatchedField.Equals(value) != true)) {
                    this.WatchedField = value;
                    this.RaisePropertyChanged("Watched");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResult", Namespace="http://schemas.datacontract.org/2004/07/ShowTrackerWCF")]
    public partial class ServiceResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ExceptionField;
        
        private int IDField;
        
        private string MethodField;
        
        private bool SuccessField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Exception {
            get {
                return this.ExceptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionField, value) != true)) {
                    this.ExceptionField = value;
                    this.RaisePropertyChanged("Exception");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Method {
            get {
                return this.MethodField;
            }
            set {
                if ((object.ReferenceEquals(this.MethodField, value) != true)) {
                    this.MethodField = value;
                    this.RaisePropertyChanged("Method");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="STSeason", Namespace="http://schemas.datacontract.org/2004/07/ShowTrackerWCF")]
    public partial class STSeason : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int EpisodesField;
        
        private int IDField;
        
        private System.DateTime LastUpdatedField;
        
        private System.Collections.ObjectModel.ObservableCollection<TVTracker.ShowTrackerServiceReference.STEpisode> STEpisodesField;
        
        private TVTracker.ShowTrackerServiceReference.STShow STShowField;
        
        private int SeasonNumberField;
        
        private int ShowIDField;
        
        private bool WatchedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Episodes {
            get {
                return this.EpisodesField;
            }
            set {
                if ((this.EpisodesField.Equals(value) != true)) {
                    this.EpisodesField = value;
                    this.RaisePropertyChanged("Episodes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdated {
            get {
                return this.LastUpdatedField;
            }
            set {
                if ((this.LastUpdatedField.Equals(value) != true)) {
                    this.LastUpdatedField = value;
                    this.RaisePropertyChanged("LastUpdated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<TVTracker.ShowTrackerServiceReference.STEpisode> STEpisodes {
            get {
                return this.STEpisodesField;
            }
            set {
                if ((object.ReferenceEquals(this.STEpisodesField, value) != true)) {
                    this.STEpisodesField = value;
                    this.RaisePropertyChanged("STEpisodes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TVTracker.ShowTrackerServiceReference.STShow STShow {
            get {
                return this.STShowField;
            }
            set {
                if ((object.ReferenceEquals(this.STShowField, value) != true)) {
                    this.STShowField = value;
                    this.RaisePropertyChanged("STShow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SeasonNumber {
            get {
                return this.SeasonNumberField;
            }
            set {
                if ((this.SeasonNumberField.Equals(value) != true)) {
                    this.SeasonNumberField = value;
                    this.RaisePropertyChanged("SeasonNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShowID {
            get {
                return this.ShowIDField;
            }
            set {
                if ((this.ShowIDField.Equals(value) != true)) {
                    this.ShowIDField = value;
                    this.RaisePropertyChanged("ShowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Watched {
            get {
                return this.WatchedField;
            }
            set {
                if ((this.WatchedField.Equals(value) != true)) {
                    this.WatchedField = value;
                    this.RaisePropertyChanged("Watched");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="STShow", Namespace="http://schemas.datacontract.org/2004/07/ShowTrackerWCF")]
    public partial class STShow : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool ActiveField;
        
        private int IDField;
        
        private string IMDBIDField;
        
        private System.DateTime LastUpdatedField;
        
        private System.Nullable<System.DateTime> LastWatchedDateField;
        
        private int LastWatchedEpisodeField;
        
        private int LastWatchedSeasonField;
        
        private System.Collections.ObjectModel.ObservableCollection<TVTracker.ShowTrackerServiceReference.STEpisode> STEpisodesField;
        
        private System.Collections.ObjectModel.ObservableCollection<TVTracker.ShowTrackerServiceReference.STSeason> STSeasonsField;
        
        private int SeasonsField;
        
        private string StatusField;
        
        private System.Nullable<int> TVDBIDField;
        
        private System.Nullable<int> TVMazeIDField;
        
        private System.Nullable<int> TVRageIDField;
        
        private string TitleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IMDBID {
            get {
                return this.IMDBIDField;
            }
            set {
                if ((object.ReferenceEquals(this.IMDBIDField, value) != true)) {
                    this.IMDBIDField = value;
                    this.RaisePropertyChanged("IMDBID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdated {
            get {
                return this.LastUpdatedField;
            }
            set {
                if ((this.LastUpdatedField.Equals(value) != true)) {
                    this.LastUpdatedField = value;
                    this.RaisePropertyChanged("LastUpdated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastWatchedDate {
            get {
                return this.LastWatchedDateField;
            }
            set {
                if ((this.LastWatchedDateField.Equals(value) != true)) {
                    this.LastWatchedDateField = value;
                    this.RaisePropertyChanged("LastWatchedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LastWatchedEpisode {
            get {
                return this.LastWatchedEpisodeField;
            }
            set {
                if ((this.LastWatchedEpisodeField.Equals(value) != true)) {
                    this.LastWatchedEpisodeField = value;
                    this.RaisePropertyChanged("LastWatchedEpisode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LastWatchedSeason {
            get {
                return this.LastWatchedSeasonField;
            }
            set {
                if ((this.LastWatchedSeasonField.Equals(value) != true)) {
                    this.LastWatchedSeasonField = value;
                    this.RaisePropertyChanged("LastWatchedSeason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<TVTracker.ShowTrackerServiceReference.STEpisode> STEpisodes {
            get {
                return this.STEpisodesField;
            }
            set {
                if ((object.ReferenceEquals(this.STEpisodesField, value) != true)) {
                    this.STEpisodesField = value;
                    this.RaisePropertyChanged("STEpisodes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<TVTracker.ShowTrackerServiceReference.STSeason> STSeasons {
            get {
                return this.STSeasonsField;
            }
            set {
                if ((object.ReferenceEquals(this.STSeasonsField, value) != true)) {
                    this.STSeasonsField = value;
                    this.RaisePropertyChanged("STSeasons");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Seasons {
            get {
                return this.SeasonsField;
            }
            set {
                if ((this.SeasonsField.Equals(value) != true)) {
                    this.SeasonsField = value;
                    this.RaisePropertyChanged("Seasons");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TVDBID {
            get {
                return this.TVDBIDField;
            }
            set {
                if ((this.TVDBIDField.Equals(value) != true)) {
                    this.TVDBIDField = value;
                    this.RaisePropertyChanged("TVDBID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TVMazeID {
            get {
                return this.TVMazeIDField;
            }
            set {
                if ((this.TVMazeIDField.Equals(value) != true)) {
                    this.TVMazeIDField = value;
                    this.RaisePropertyChanged("TVMazeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TVRageID {
            get {
                return this.TVRageIDField;
            }
            set {
                if ((this.TVRageIDField.Equals(value) != true)) {
                    this.TVRageIDField = value;
                    this.RaisePropertyChanged("TVRageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="STEpisode", Namespace="http://schemas.datacontract.org/2004/07/ShowTrackerWCF")]
    public partial class STEpisode : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<System.DateTime> DateWatchedField;
        
        private int EpisodeNumberField;
        
        private string EpisodeRefField;
        
        private int IDField;
        
        private System.DateTime LastUpdatedField;
        
        private TVTracker.ShowTrackerServiceReference.STSeason STSeasonField;
        
        private TVTracker.ShowTrackerServiceReference.STShow STShowField;
        
        private int SeasonIDField;
        
        private int ShowIDField;
        
        private string TitleField;
        
        private bool WatchedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateWatched {
            get {
                return this.DateWatchedField;
            }
            set {
                if ((this.DateWatchedField.Equals(value) != true)) {
                    this.DateWatchedField = value;
                    this.RaisePropertyChanged("DateWatched");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EpisodeNumber {
            get {
                return this.EpisodeNumberField;
            }
            set {
                if ((this.EpisodeNumberField.Equals(value) != true)) {
                    this.EpisodeNumberField = value;
                    this.RaisePropertyChanged("EpisodeNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EpisodeRef {
            get {
                return this.EpisodeRefField;
            }
            set {
                if ((object.ReferenceEquals(this.EpisodeRefField, value) != true)) {
                    this.EpisodeRefField = value;
                    this.RaisePropertyChanged("EpisodeRef");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdated {
            get {
                return this.LastUpdatedField;
            }
            set {
                if ((this.LastUpdatedField.Equals(value) != true)) {
                    this.LastUpdatedField = value;
                    this.RaisePropertyChanged("LastUpdated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TVTracker.ShowTrackerServiceReference.STSeason STSeason {
            get {
                return this.STSeasonField;
            }
            set {
                if ((object.ReferenceEquals(this.STSeasonField, value) != true)) {
                    this.STSeasonField = value;
                    this.RaisePropertyChanged("STSeason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TVTracker.ShowTrackerServiceReference.STShow STShow {
            get {
                return this.STShowField;
            }
            set {
                if ((object.ReferenceEquals(this.STShowField, value) != true)) {
                    this.STShowField = value;
                    this.RaisePropertyChanged("STShow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SeasonID {
            get {
                return this.SeasonIDField;
            }
            set {
                if ((this.SeasonIDField.Equals(value) != true)) {
                    this.SeasonIDField = value;
                    this.RaisePropertyChanged("SeasonID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShowID {
            get {
                return this.ShowIDField;
            }
            set {
                if ((this.ShowIDField.Equals(value) != true)) {
                    this.ShowIDField = value;
                    this.RaisePropertyChanged("ShowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Watched {
            get {
                return this.WatchedField;
            }
            set {
                if ((this.WatchedField.Equals(value) != true)) {
                    this.WatchedField = value;
                    this.RaisePropertyChanged("Watched");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ShowTrackerServiceReference.IShowTrackerService")]
    public interface IShowTrackerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShowTrackerService/GetShowData", ReplyAction="http://tempuri.org/IShowTrackerService/GetShowDataResponse")]
        System.Threading.Tasks.Task<TVTracker.ShowTrackerServiceReference.ShowData> GetShowDataAsync(int tvMazeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShowTrackerService/GetAllShows", ReplyAction="http://tempuri.org/IShowTrackerService/GetAllShowsResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<TVTracker.ShowTrackerServiceReference.ShowData>> GetAllShowsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShowTrackerService/AddShow", ReplyAction="http://tempuri.org/IShowTrackerService/AddShowResponse")]
        System.Threading.Tasks.Task<TVTracker.ShowTrackerServiceReference.ServiceResult> AddShowAsync(TVTracker.ShowTrackerServiceReference.ShowData showData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShowTrackerService/UpdateEpisode", ReplyAction="http://tempuri.org/IShowTrackerService/UpdateEpisodeResponse")]
        System.Threading.Tasks.Task<TVTracker.ShowTrackerServiceReference.ServiceResult> UpdateEpisodeAsync(int showID, int seasonID, int episodeNumber, bool isWatched, System.DateTime dateWatched);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShowTrackerService/DeleteShow", ReplyAction="http://tempuri.org/IShowTrackerService/DeleteShowResponse")]
        System.Threading.Tasks.Task<TVTracker.ShowTrackerServiceReference.ServiceResult> DeleteShowAsync(int showID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShowTrackerService/UpdateShow", ReplyAction="http://tempuri.org/IShowTrackerService/UpdateShowResponse")]
        System.Threading.Tasks.Task<TVTracker.ShowTrackerServiceReference.ServiceResult> UpdateShowAsync(int tvMazeID, System.Collections.ObjectModel.ObservableCollection<TVTracker.ShowTrackerServiceReference.STSeason> seasons, System.Collections.ObjectModel.ObservableCollection<TVTracker.ShowTrackerServiceReference.STEpisode> episodes);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IShowTrackerServiceChannel : TVTracker.ShowTrackerServiceReference.IShowTrackerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ShowTrackerServiceClient : System.ServiceModel.ClientBase<TVTracker.ShowTrackerServiceReference.IShowTrackerService>, TVTracker.ShowTrackerServiceReference.IShowTrackerService {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ShowTrackerServiceClient() : 
                base(ShowTrackerServiceClient.GetDefaultBinding(), ShowTrackerServiceClient.GetDefaultEndpointAddress()) {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IShowTrackerService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ShowTrackerServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(ShowTrackerServiceClient.GetBindingForEndpoint(endpointConfiguration), ShowTrackerServiceClient.GetEndpointAddress(endpointConfiguration)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ShowTrackerServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ShowTrackerServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ShowTrackerServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ShowTrackerServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ShowTrackerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Threading.Tasks.Task<TVTracker.ShowTrackerServiceReference.ShowData> GetShowDataAsync(int tvMazeID) {
            return base.Channel.GetShowDataAsync(tvMazeID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<TVTracker.ShowTrackerServiceReference.ShowData>> GetAllShowsAsync() {
            return base.Channel.GetAllShowsAsync();
        }
        
        public System.Threading.Tasks.Task<TVTracker.ShowTrackerServiceReference.ServiceResult> AddShowAsync(TVTracker.ShowTrackerServiceReference.ShowData showData) {
            return base.Channel.AddShowAsync(showData);
        }
        
        public System.Threading.Tasks.Task<TVTracker.ShowTrackerServiceReference.ServiceResult> UpdateEpisodeAsync(int showID, int seasonID, int episodeNumber, bool isWatched, System.DateTime dateWatched) {
            return base.Channel.UpdateEpisodeAsync(showID, seasonID, episodeNumber, isWatched, dateWatched);
        }
        
        public System.Threading.Tasks.Task<TVTracker.ShowTrackerServiceReference.ServiceResult> DeleteShowAsync(int showID) {
            return base.Channel.DeleteShowAsync(showID);
        }
        
        public System.Threading.Tasks.Task<TVTracker.ShowTrackerServiceReference.ServiceResult> UpdateShowAsync(int tvMazeID, System.Collections.ObjectModel.ObservableCollection<TVTracker.ShowTrackerServiceReference.STSeason> seasons, System.Collections.ObjectModel.ObservableCollection<TVTracker.ShowTrackerServiceReference.STEpisode> episodes) {
            return base.Channel.UpdateShowAsync(tvMazeID, seasons, episodes);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IShowTrackerService)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IShowTrackerService)) {
                return new System.ServiceModel.EndpointAddress("http://41south.net/TVTracker/ShowTrackerWCF.ShowTrackerService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return ShowTrackerServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IShowTrackerService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return ShowTrackerServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IShowTrackerService);
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_IShowTrackerService,
        }
    }
}
